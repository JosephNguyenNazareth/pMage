merge (s:System {name:'PMS'})
merge (m1:Method {name:'GET'})
merge (m2:Method {name:'PUT'})
merge (f1:Function {name: "verify"})
merge (f2:Function {name: "validateTask"})
merge (f3:Function {name: "startTask"})
merge (f4:Function {name: "endTask"})
merge (f5:Function {name: "login"})
merge (f1)-[:PART_OF]->(s)
merge (f2)-[:PART_OF]->(s)
merge (f3)-[:PART_OF]->(s)
merge (f4)-[:PART_OF]->(s)
merge (f5)-[:PART_OF]->(s)
merge (s1:System {name:"core-bape"})
merge (s2:System {name:"jBPM"})
merge (s3:System {name:"bonita"})
merge (s1)-[:IS_A]->(s)
merge (s2)-[:IS_A]->(s)
merge (s3)-[:IS_A]->(s)

// for core-bape
merge (f11:Function {name:"{url}/{processInstanceId}"})
merge (p1:PathVariable {name:"url"})
merge (p2:PathVariable {name:"processInstanceId"})
merge (m1)-[:PART_OF]->(f11)
merge (p1)-[:PART_OF]->(f11)
merge (p2)-[:PART_OF]->(f11)
merge (f11)-[:IS_A]->(f1)
merge (f11)-[:PART_OF]->(s1)

merge (f12:Function {name:"{url}/{processInstanceId}/validate-task"})
merge (p3:Parameter {name:"taskName"})
merge (p4:Parameter {name:"actorName"})
merge (m1)-[:PART_OF]->(f12)
merge (p1)-[:PART_OF]->(f12)
merge (p2)-[:PART_OF]->(f12)
merge (p3)-[:PART_OF]->(f12)
merge (p4)-[:PART_OF]->(f12)
merge (f12)-[:IS_A]->(f2)
merge (f12)-[:PART_OF]->(s1)

merge (f13:Function {name:"{url}/{processInstanceId}/start-task"})
merge (m2)-[:PART_OF]->(f13)
merge (p1)-[:PART_OF]->(f13)
merge (p2)-[:PART_OF]->(f13)
merge (p3)-[:PART_OF]->(f13)
merge (p4)-[:PART_OF]->(f13)
merge (f13)-[:IS_A]->(f3)
merge (f13)-[:PART_OF]->(s1)

merge (f14:Function {name:"{url}/{processInstanceId}/end-task"})
merge (p5:Parameter {name:"taskId"})
merge (m2)-[:PART_OF]->(f14)
merge (p1)-[:PART_OF]->(f14)
merge (p2)-[:PART_OF]->(f14)
merge (p5)-[:PART_OF]->(f14)
merge (f14)-[:IS_A]->(f4)
merge (f14)-[:PART_OF]->(s1);

// for jBPM
match (f1:Function {name: "verify"})
match (f2:Function {name: "validateTask"})
match (f3:Function {name: "startTask"})
match (f4:Function {name: "endTask"})
match (f5:Function {name: "login"})
match (s2:System {name:"jBPM"})
match (m1:Method {name:'GET'})
match (m2:Method {name:'PUT'})
match (p1:PathVariable {name:"url"})
match (p2:PathVariable {name:"processInstanceId"})

merge (f21:Function {name:"{url}/server/queries/processes/instances/{processInstanceId}"})
merge (m1)-[:PART_OF]->(f21)
merge (p1)-[:PART_OF]->(f21)
merge (p2)-[:PART_OF]->(f21)
merge (f21)-[:IS_A]->(f1)
merge (f21)-[:PART_OF]->(s2)

merge (f22:Function {name:"{url}/server/containers/{containerId}/tasks/{taskInstanceId}"})
merge (p3:PathVariable {name:"containedId"})
merge (p4:PathVariable {name:"taskInstanceId"})
merge (m1)-[:PART_OF]->(f22)
merge (p1)-[:PART_OF]->(f22)
merge (p3)-[:PART_OF]->(f22)
merge (p4)-[:PART_OF]->(f22)
merge (f22)-[:IS_A]->(f2)
merge (f22)-[:PART_OF]->(s2)

merge (f23:Function {name:"{url}/server/containers/{containerId}/tasks/{taskInstanceId}/states/started"})
merge (m2)-[:PART_OF]->(f23)
merge (p1)-[:PART_OF]->(f23)
merge (p3)-[:PART_OF]->(f23)
merge (p4)-[:PART_OF]->(f23)
merge (f23)-[:IS_A]->(f3)
merge (f23)-[:PART_OF]->(s2)

merge (f24:Function {name:"{url}/server/containers/{containerId}/tasks/{taskInstanceId}/states/completed"})
merge (m2)-[:PART_OF]->(f24)
merge (p1)-[:PART_OF]->(f24)
merge (p3)-[:PART_OF]->(f24)
merge (p4)-[:PART_OF]->(f24)
merge (f24)-[:IS_A]->(f4)
merge (f24)-[:PART_OF]->(s2);

// for bonitasoft
match (f1:Function {name: "verify"})
match (f2:Function {name: "validateTask"})
match (f3:Function {name: "startTask"})
match (f4:Function {name: "endTask"})
match (f5:Function {name: "login"})
match (s3:System {name:"bonita"})
match (m1:Method {name:'GET'})
match (m2:Method {name:'PUT'})
match (p1:PathVariable {name:"url"})
match (p2:PathVariable {name:"processInstanceId"})
match (p4:PathVariable {name:"taskInstanceId"})

merge (f31:Function {name:"{url}/API/bpm/case/{processInstanceId}"})
merge (m1)-[:PART_OF]->(f31)
merge (p1)-[:PART_OF]->(f31)
merge (p2)-[:PART_OF]->(f31)
merge (f31)-[:IS_A]->(f1)
merge (f31)-[:PART_OF]->(s3)

merge (f32:Function {name:"{url}/API/bpm/task/{taskInstanceId}"})
merge (m1)-[:PART_OF]->(f32)
merge (p1)-[:PART_OF]->(f32)
merge (p4)-[:PART_OF]->(f32)
merge (f32)-[:IS_A]->(f3)
merge (f32)-[:PART_OF]->(s3)

merge (f34:Function {name:"{url}API/bpm/task/{taskInstanceId}"})
merge (b:Body{name:'state'})
set b.value = "completed"
merge (m2)-[:PART_OF]->(f34)
merge (p1)-[:PART_OF]->(f34)
merge (p4)-[:PART_OF]->(f34)
merge (b)-[:PART_OF]->(f34)
merge (f34)-[:IS_A]->(f4)
merge (f34)-[:PART_OF]->(s3);